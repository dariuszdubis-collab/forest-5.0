[tool.poetry]
name = "forest5"
version = "5.0.0a1"
description = "Forest 5.0 â€“ modularny framework tradingowy (AT + AI + MT5)"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{ include = "forest5", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
pandas = "^2.2"
numpy = "^2.0"
pyyaml = "^6.0.1"
pydantic = "^2.8"
scipy = "^1.11"
joblib = "^1.4"
plotly = "^5.23"
tzdata = "*"
structlog = "^24.1"
typing-extensions = "^4.12"
setuptools = ">=78.1.1"
# progress bar
rich = "^14.1"
# opcjonalne:
streamlit = { version = "^1.36", optional = true }
openai = { version = "^1.35", optional = true }

[tool.poetry.extras]
ui = ["plotly", "streamlit"]
ai = ["openai"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3"
ruff = "^0.5.7"
black = "^24.8"
flake8 = "^7.1"
bandit = "^1.8.6"
pip-audit = "^2.9.0"
pytest-cov = "^6.2.1"

[tool.poetry.scripts]
forest5 = "forest5.cli:main"
forest5-demo = "forest5.examples.synthetic:main"
time-only = "forest5.time_only:_run_cli"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.black]
line-length = 100
extend-exclude = '''
(
  ^Fxdata/|
  ^fxdata/|
  ^out/|
  ^out_runs/|
  ^out_data_inspect/|
  ^out_.*/|
  ^node_modules/|
  ^\.venv/|
  ^\.cache/|
  ^\.pytest_cache/|
  ^\.ruff_cache/
)
'''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
